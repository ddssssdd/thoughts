<% include ../shared/header %>


<div class="page-content">
<!-- div class="page-header">
	<h1>Posts
		<small><i class="icon-double-angle-right"></i>View</small>
	</h1>
</div --><!-- /.page-header -->
	<div class="row">
		<div class="col-xs-12">
			<!-- PAGE CONTENT BEGINS -->

			<div  ng-controller="PostCtrl">

				<form action="/posts/add" method="POST" enctype='multipart/form-data' id="edit_form">
					<div class="row-fluild  text-right">
						<div class="btn-group tool-bar">
							<button class="btn btn-sm btn-success" type="submit">
								<i class="icon-ok"></i>
								{{post_id=='0'?'Add':'Update'}}
							</button>
						</div>						
					</div>
					<br/>
					<input type="hidden" name="id" value = "{{post._id}}" />
					<textarea type="text" name="content" id="editor" width="100%" ng-model="post.content"></textarea>
					<input type="file" name="file"/>
					<input type="file" name="file2"/>					
						
				</form>
				<br />
				<div class="row-fluid">
					<div class = "panel">
					<ul class="ace-thumbnails" id="contactList">
						<li ng-repeat="item in attachments"> 
							<a ng-href="{{item.fileId.link}}" data-rel='colorbox' class='cboxElement'>
								<img ng-src="{{item.fileId.link}}"  height="150px"/> 
								<div class="text">
									<div class="inner" ng-bind="item.fileId.filename">
										
									</div>
								</div>
							</a>
							<div class="tools tools-bottom">
								<a href="javascript:void(0)" ng-click="attach_link(item,$event)">
									<i class="icon-link"></i>
								</a>

								<a href="javascript:void(0)" ng-click="attach_remove(item,$event)">
									<i class="icon-remove red"></i>
								</a>

								<a href="#">
									<i class="icon-paper-clip"></i>
								</a>

								<a href="#">
									<i class="icon-pencil"></i>
								</a>

							</div>
						</li>
					</ul>
				</div>
				</div>
				
				
				
			</div><!-- /.main-content -->

			<!-- PAGE CONTENT ENDS -->
		</div>
	</div>
</div>
	


<% include ../shared/load_public %>

<link rel="stylesheet" href="/assets/css/colorbox.css" />

<script src="/assets/js/jquery.colorbox-min.js"></script>

<!-- ace scripts -->

<script src="/assets/js/ace-elements.min.js"></script>
<script src="/assets/js/ace.min.js"></script>

<script src="/ckeditor/ckeditor.js"></script>

<script>
	
	angular.module("thoughts_app").controller("PostCtrl",function($scope,httpService,Message,userInfo){		
		$scope.post = {content:''}
		$scope.attachments = [];
		$scope.post_id = "<%= post_id %>";
		$scope.load_data = function(){
			httpService("/posts/edit",{id:$scope.post_id},function(json){
				$scope.post = json.post;
				$scope.attachments = json.attachments;
			})
		}
		if ($scope.post_id!='0'){
			$scope.load_data();		
		}
		$scope.attach_link = function(item,event){

		}
		$scope.attach_remove = function(item,event){
			if (!item._id){
				var index = $scope.attachments.indexOf(item);
				$scope.attachments.splice(index,1);
				return;
			}
			Message.confirm("Delete this attachment "+ item.fileId.filename,'Cancel','Delete',function(){},function(){
				console.log("Delete");
				httpService("/posts/attachment_delete",{id:item._id},function(json){
					var index = $scope.attachments.indexOf(item);
					$scope.attachments.splice(index,1);
				})
			})
		}
	});		
	document.onpaste = function(event){
		var items = (event.clipboardData || event.originalEvent.clipboardData).items;
		console.log(JSON.stringify(items)); // will give you the mime types
		for (index in items) {
			var item = items[index];
			if (item.kind === 'file') {
				var blob = item.getAsFile();
				var reader = new FileReader();
				reader.onload = function(event){
					//console.log(event.target.result);
					var data = event.target.result;
					
	 				var url = "/posts/upload_image";
	 				$.post(url,{imgdata:data},function(json){
		 				console.log(json);
		 				angular.element("#edit_form").scope().attachments.push({fileId:json.result,_id:0});
		 				angular.element("#edit_form").scope().$apply();
		 				var hidden = "<input type='hidden' name='attachments' value='"+json.result._id+"' />";
		 				$(hidden).appendTo("#edit_form");
	 				});
					
				}; // data url!
					
				reader.readAsDataURL(blob);
			}
		}
	}
</script>
<script type="text/javascript">
	
jQuery(function($){
	//CKEDITOR.replace("editor");
	

	var colorbox_params = {
		reposition:true,
		scalePhotos:true,
		scrolling:false,
		previous:'<i class="icon-arrow-left"></i>',
		next:'<i class="icon-arrow-right"></i>',
		close:'&times;',
		current:'{current} of {total}',
		maxWidth:'100%',
		maxHeight:'100%',
		onOpen:function(){
			document.body.style.overflow = 'hidden';
		},
		onClosed:function(){
			document.body.style.overflow = 'auto';
		},
		onComplete:function(){
			$.colorbox.resize();
		}
	};

	$('.ace-thumbnails [data-rel="colorbox"]').colorbox(colorbox_params);
	$("#cboxLoadingGraphic").append("<i class='icon-spinner orange'></i>");//let's add a custom loading icon

});
	

</script>
<script>
	CKEDITOR.replace("editor",{
			toolbarGroups: [
						{"name":"basicstyles","groups":["basicstyles"]},						
						{"name":"styles","groups":["styles"]},
						{"name":"paragraph","groups":["list","blocks"]},
						{"name":"document","groups":["mode"]},
						{"name":"insert","groups":["insert"]},
					],
			extraPlugins: 'uploadimage,image2',
			height: 300,

			// Upload images to a CKFinder connector (note that the response type is set to JSON).
			uploadUrl: '/posts/upload_file',

			// Configure your file manager integration. This example uses CKFinder 3 for PHP.
			filebrowserBrowseUrl: '/ckfinder/ckfinder.html',
			filebrowserImageBrowseUrl: '/ckfinder/ckfinder.html?type=Images',
			filebrowserUploadUrl: '/ckfinder/core/connector/php/connector.php?command=QuickUpload&type=Files',
			filebrowserImageUploadUrl: '/ckfinder/core/connector/php/connector.php?command=QuickUpload&type=Images',

			// The following options are not necessary and are used here for presentation purposes only.
			// They configure the Styles drop-down list and widgets to use classes.

			stylesSet: [
				{ name: 'Narrow image', type: 'widget', widget: 'image', attributes: { 'class': 'image-narrow' } },
				{ name: 'Wide image', type: 'widget', widget: 'image', attributes: { 'class': 'image-wide' } }
			],

			// Load the default contents.css file plus customizations for this sample.
			contentsCss: [ CKEDITOR.basePath + 'contents.css', 'http://sdk.ckeditor.com/samples/assets/css/widgetstyles.css' ],

			// Configure the Enhanced Image plugin to use classes instead of styles and to disable the
			// resizer (because image size is controlled by widget styles or the image takes maximum
			// 100% of the editor width).
			image2_alignClasses: [ 'image-align-left', 'image-align-center', 'image-align-right' ],
			image2_disableResizer: true
		});	
</script>


<% include ../shared/footer %>
